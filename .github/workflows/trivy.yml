name: trivy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '40 8 * * 2'

permissions:
  contents: read

jobs:
  trivy-scan:
    permissions:
      contents: read # Required for actions/checkout to fetch code
      security-events: write # Required for uploading SARIF results
      actions: read # Only required for private repositories
    name: Trivy Scan and Upload Results
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Cache Trivy DB
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-db-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-trivy-db-

      - name: Build Docker Image
        run: |
          docker build -t docker.io/my-organization/my-app:${{ github.sha }} .

      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        env:
          TRIVY_CACHE_DIR: ~/.cache/trivy
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use a PAT if rate limit issues persist
        with:
          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          vuln-type: 'os,library'
          skip-db-update: true # Prevents frequent DB updates to avoid rate limits

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
