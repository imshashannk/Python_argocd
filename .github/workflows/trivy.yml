name: Trivy Vulnerability Scan and Slack Notification

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  trivy-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Run Trivy scan
        id: trivy_scan
        run: |
          # Run Trivy to scan the Docker image
          docker run --rm -v $(pwd):/root/.cache/ -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:0.29.1 --format json --output trivy-report.json imshashannk/python-argocd:latest

      - name: Process Trivy report and prepare Slack message
        id: process_report
        run: |
          # Parse the Trivy report and extract vulnerabilities
          vulnerabilities=$(jq '[.[] | select(.Vulnerabilities != null) | {PkgName: .Target, Vulnerabilities: .Vulnerabilities // []}]' trivy-report.json)
          
          # Check if vulnerabilities were found
          if [[ -z "$vulnerabilities" || "$vulnerabilities" == "[]" ]]; then
            echo "No vulnerabilities found." > result.txt
          else
            # Format the vulnerabilities and write to result.txt
            echo "$vulnerabilities" | jq -r '.[] | "Package: \(.PkgName)\nVulnerabilities:\n\(.Vulnerabilities | map("\(.VulnerabilityID) - \(.Severity) - \(.Title)") | join("\n"))\n"' > result.txt
          fi
          
          # Check if result.txt exists before proceeding
          if [ ! -f result.txt ]; then
            echo "Error: result.txt not found. Skipping Slack notification."
            exit 1
          fi

      - name: Send Trivy scan results to Slack
        run: |
          # Send the formatted scan results to Slack
          scan_results=$(cat result.txt)
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"Trivy Vulnerability Scan Report for Docker Image: imshashannk/python-argocd\n$scan_results\"
          }" ${{ secrets.SLACK_WEBHOOK_URL }}

